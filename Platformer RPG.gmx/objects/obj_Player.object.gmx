<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>Player_obj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_physics()
moveSpeed = 5
jumpSpeed = -7
bullet_damage = 30
canHurt = false
enemyCollide = true
falling = false
can_shoot = true
xknockback = 0
yknockback = 0
jump_damage = 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///All Knockback
if place_meeting(x,y + vsp,enemy_obj) {
    with enemy_obj {
        if place_meeting(x, y - other.vsp, other.id) {
            HurtEnemy(other.jump_damage)
        }
    }
    canHurt = false
    
    vsp = -5
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and Collision
if mouse_check_button_released(mb_left) &amp;&amp; can_shoot {
    bullet = instance_create(x, y, obj_bullet)
    bullet.speed = 4 + chargetime / 5
    bullet.damage = bullet_damage + chargetime * 1.5
    bullet.direction = point_direction(x,y,mouse_x,mouse_y)
    bullet.image_angle = bullet.direction
    xknockback = -cos(bullet.direction * pi / 180) * (chargetime / 3)
    yknockback = sin(bullet.direction * pi / 180) * (chargetime / 4)
    if abs(xknockback) &lt; 2.5
        xknockback = 0
    if abs(yknockback) &lt; 2.5
        yknockback = 0
    can_shoot = false
    alarm[1] = 10
}
if mouse_check_button(mb_left) {
    chargetime = min(chargetime + 1, 60)
} else
    chargetime = 0
left = -keyboard_check(ord('A'))
right = keyboard_check(ord('D'))
jump = keyboard_check(vk_space)
hsp = (left + right) * moveSpeed + xknockback
if place_meeting(x,y+1,obj_solid) {
    vsp = jump * jumpSpeed + yknockback
}
if !instance_exists(enemy_obj) {
    room_goto(first_room)
    PlayerStats_obj.Gold += 30
}
if PlayerStats_obj.Health &lt;= 0 {
    instance_destroy()
}
xknockback -= sign(xknockback)
yknockback -= sign(yknockback)
if abs(xknockback) &lt;= 0.55
    xknockback = 0
if abs(yknockback) &lt;= 0.55
    yknockback = 0
GravityMovement()
script_collision()
if enemyCollide {
//    script_enemyCollide()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_text(x - 40, y - 20, "Health: " + string(PlayerStats_obj.Health))
///Head Jumping and Wasp Falling
if place_meeting(x,y+1,enemy_obj) &amp;&amp; enemyCollide = true {
    vsp -= 5
    falling = true
}
if falling {
    with obj_wasp {
        vsp += 10
    }
}
          </string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
