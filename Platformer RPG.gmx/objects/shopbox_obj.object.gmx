<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>textbox_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = ""
enum ShopTextState {
    ChooseToShop,
    ChooseItem,
    NotEnoughMoney,
    ThankYouMessage,
    LeaveMessage
}
state = ShopTextState.ChooseToShop
buysomething = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (state) {
    case ShopTextState.ChooseToShop:
        if keyboard_check(ord("S")) {
            text =
            "Hey. Wanna buy something?
            Yes
            &gt;No"
            buysomething = false
        }
        if keyboard_check(ord("W")) {
            text = 
            "Hey. Wanna buy something?
            &gt;Yes
            No"
            buysomething = true
        }
        if text == "" {
            text = 
            "Hey. Wanna buy something?
            &gt;Yes
            No"
            buysomething = true
        }
        if buysomething &amp;&amp; (keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter)) 
            state = ShopTextState.ChooseItem
        if !buysomething &amp;&amp; (keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter)) 
            state = ShopTextState.LeaveMessage
        break;
    case ShopTextState.ChooseItem:
        text = "What do you want to buy?
        &gt;Health Potion - 50g
        "
        if (keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter)) {
             if global.gold &gt;= 50 {
                global.gold -= 50
                state = ShopTextState.ThankYouMessage
             } else {
                state = ShopTextState.NotEnoughMoney
             }
             
        }
        break;
    case ShopTextState.NotEnoughMoney:
        text = "YOU DON'T HAVE ENOUGH FUCKING MONEY YOU TWAT!!!!"
        TextboxLeave()
        break;
    case ShopTextState.ThankYouMessage:
        text = "Thank you for shopping at this little location.#(Hehe, you ignorant dunce)."
        TextboxLeave()
        break;
    case ShopTextState.LeaveMessage:
        text = "Fuck you too, then. Suck my fucking cock."
        TextboxLeave()
        break
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_text(x - 250, y - 30, text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
